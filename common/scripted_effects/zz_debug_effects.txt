# this one is called for nightly tests
ai_test_startup_effect = {
	# if = {
	# 	limit = { is_major = yes } 
	# 	#enable crypto agency in ~2.5 years
	# 	country_event = { id = generic_debug.42 days = 900 }
	# }
	# if = {
	# 	limit = { 
	# 		OR = {
	# 			tag = ENG
	# 		}
	# 	} 
	# 	#give usa access to france & england in ~4 year
	# 	country_event = { id = generic_debug.43 days = 1500 }
	# }
}

# effects that starts with name d_ will be available as console command
# use "effect_name_DESC" to define a description

d_collaboration = {
	if = {
		limit = { tag = FROM }
		log = "Error:"
		log = "  right click a country to select it for adding collaboration"
		log = "  you can specify collaboration amount to add or just use 'collaboration' to add 10%"
		log = " "
	}
	else = {
		FROM = {
			add_collaboration = { 
				target = PREV 
				value = args^0?0.1				
			}
			
			log = "Added [?args^0?0.1|H%] collaboration for [PREV.GetName]"
		}
	}
}

d_add_fake_armies = {
	if = {
		# create template if not exist
		limit = {
			not = {
				has_country_flag = fake_intel_template_created
			}
		}
		division_template = {
			name = "Fake Intel Division"
			
			is_fake_intel_division = yes
			is_locked = yes
			regiments = {
				fake_intel_unit = { x = 0 y = 0 }
			}
		}
		set_country_flag = fake_intel_template_created
	}
	
	# give it an id and store id & current date so it can be deleted later
	if = {
		limit = { NOT = { has_variable = fake_intel_id } }
		set_variable = { fake_intel_id = 1000 }
	}
	set_temp_variable = { id_to_set = fake_intel_id }
	add_to_variable = { fake_intel_id = 1 }
	add_to_array = {
		fake_intel_ids_to_delete = id_to_set
	}
	set_variable = { num_days_for_fake_intel_id@var:id_to_set = global.num_days }
	
	# minimum of 0.25 of current armies or 24
	set_temp_variable = { num_to_create = num_armies }
	multiply_temp_variable = { num_to_create = 0.25 }
	round_temp_variable = num_to_create
	add_to_temp_variable = { num_to_create = 1 }
	clamp_temp_variable = {
		var = num_to_create
		min = 24
	}
	
	# create actual units
	capital_scope = {
		create_unit = {
			division = "division_template = \"Fake Intel Division\" start_experience_factor = 0.5" 
			owner = PREV
			count = num_to_create
			id = id_to_set
		}
	}
	
	# will delete them after 90 days
	country_event = { id = lar_fake_intel_units.1 days = 90 }
	
	log = "Done"
}

d_expand = {
	every_state = {
		limit = {
			num_owned_neighbour_states = {
				owner = PREV
				count > 0
			}
		}
		PREV = {
			transfer_state = PREV
		}
	}
}

d_coastalmao = {
	every_state = {
		limit = {
			is_coastal = yes
		}
		PREV = {
			transfer_state = PREV
		}
	}
}
d_create_units = {
	FROM = {
		division_template = {
			name = "Console Unit"
			priority = 0
			regiments = {
				infantry = { x = 0 y = 0 }
				infantry = { x = 0 y = 1 }
				infantry = { x = 0 y = 2 }
				infantry = { x = 0 y = 3 }
			}
		}
	}

	set_temp_variable = { i = 0 }
	while_loop_effect = {
		limit = { check_variable = { i < args^0 } }
		ROOT = {
			create_unit = {
				division = "name = \"Console Unit\" division_template = \"Console Unit\" start_experience_factor = 0.5 start_equipment_factor = 0.5"
				owner = FROM
			}
		}
		add_to_temp_variable = { i = 1 }
	}
}

d_create_fake_units = {
	FROM = {
		division_template = {
			name = "Fake Unit"
			priority = 0
			regiments = {
				fake_intel_unit = { x = 0 y = 0 }
			}
		}
	}

	set_temp_variable = { i = 0 }
	while_loop_effect = {
		limit = { check_variable = { i < args^0 } }
		ROOT = {
			create_unit = {
				division = "name = \"Fake Unit\" division_template = \"Fake Unit\" start_experience_factor = 0.01 start_equipment_factor = 0.01"
				owner = FROM
			}
		}
		add_to_temp_variable = { i = 1 }
	}
}

d_dismantle_faction = {
	dismantle_faction = yes
}

d_create_army = {
	if = {
		limit = {
			not = {
				has_template = "Infantry Unit"
			}
		}
		division_template = {
			name = "Infantry Unit"
			regiments = {
				infantry = { x = 0 y = 0 }
				infantry = { x = 0 y = 1 }
				infantry = { x = 0 y = 2 }
			}
		}
	}
	
	set_temp_variable = { num_of_divs = max_available_manpower_k }
	log = "Population (1000s): [?num_of_divs]"
	divide_temp_variable = { num_of_divs = 10 }
	log = "Divisions: [?num_of_divs]"

	set_temp_variable = { i = 0 }
	while_loop_effect = {
		limit = { check_variable = { i < num_of_divs } }
		if = {
			limit = {
				has_autonomy_state = Autonomy_Autonomous_Zone
				is_subject_of = RUS
			}
			RUS = {
				random_owned_state = {
					create_unit = {
						division = "name = \"Infantry Unit\" division_template = \"Infantry Unit\" start_experience_factor = 0.5 start_equipment_factor = 0.5"
						owner = PREV
					}
				}
			}
			else = {
				random_owned_state = {
					create_unit = {
						division = "name = \"Infantry Unit\" division_template = \"Infantry Unit\" start_experience_factor = 0.5 start_equipment_factor = 0.5"
						owner = PREV
					}
				}
			}
		}
		add_to_temp_variable = { i = 1 }
		multiply_temp_variable = { i = 1.02 }
	}
}

d_global_military_stats = {
	set_temp_variable = { global_army = 0 }
	every_country = {
		add_to_temp_variable = { PREV.global_army = THIS.num_divisions }
	}
	log = "Divisions: [?global_army]"
}
d_set_demilitarize_zone = {
	for_each_scope_loop = {
		array = args
		set_demilitarized_zone = yes
	}
}
d_set_militarize_zone = {
	for_each_scope_loop = {
		array = args
		set_demilitarized_zone = no
	}
}
d_create_faction = {
	random_list = {
		10 = { create_faction = "FACTION_NAME_NONALIGNED_1" }
		10 = { create_faction = "FACTION_NAME_NONALIGNED_2" }
		10 = { create_faction = "FACTION_NAME_NONALIGNED_3" }
		10 = { create_faction = "FACTION_NAME_NONALIGNED_4" }
		10 = { create_faction = "FACTION_NAME_NONALIGNED_5" }
	}
}
d_crasher = {
	add_to_variable = { crasher = 1 }
	log = "Crasher: [?crasher]"
	d_crasher = yes
}
d_annex_region = {
	for_each_loop = {
		array = args
		meta_effect = {
			text = {
				every_state = {
					limit = {
						region = [REGION_ID]
					}
					PREV = {
						transfer_state = PREV
					}
				}
			}
			REGION_ID = "[?v]"
		}
	}
}
d_annex_area = {
	meta_effect = {
		text = {
			every_state = {
				limit = {
					area = [REGION_ID]
				}
				PREV = {
					transfer_state = PREV
				}
			}
		}
		REGION_ID = "[?args^0]"
	}
}
d_core_owned = {
	every_state = {
		limit = {
			is_owned_by = FROM
		}
		add_core_of = FROM
	}
}
d_list_characters = {
	every_character = {
		log = "[THIS.GetName]"
	}
}
d_demote_country_leader = {
	retire_country_leader = yes
}
d_world_ussr = {
	every_country = {
		limit = {
			NOT = {
				tag = RUS
			}
			NOT = {
				tag = ZZZ
			}
		}
		RUS = {
			set_autonomy = {
				target = PREV
				autonomy_state = Autonomy_Autonomous_Zone
			}
		}
		set_cosmetic_tag = COUNTRY_SOVIET_SOCIALIST_REPUBLIC
	}
}
d_insane_attack = {
	every_unit_leader = {
		add_temporary_buff_to_units = {
			combat_offense = 50
			combat_breakthrough = 50
			days = 1400
		}
	}
}
d_election = {
	hold_election = ROOT
}

d_every_RUS_cold_war_sphere = {
	every_country = {
		if = {
			limit = {
				RUS_cold_war_sphere = yes
			}
			log = "[THIS.GetName]: Yes to RUS_cold_war_sphere"

			else = {
				log = "[THIS.GetName]: No to RUS_cold_war_sphere"
			}
		}
	}
}

d_log_surrenders = {
	log = "[THIS.GetName]: Surrender at [?THIS.surrender_progress]"
}